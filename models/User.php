<?php

namespace app\models;

use Yii;
use yii\web\IdentityInterface;

/**
 * This is the model class for table "user".
 *
 * @property int $id
 * @property string|null $name
 * @property string|null $email
 * @property string|null $password
 * @property int|null $isAdmin
 * @property string|null $userPhoto
 * @property string|null $modey
 * @property string|null $cout_task
 * @property string|null $description
 * @property string|null $coins_from_viewers
 * @property int $auth_key
 */
class User extends \yii\db\ActiveRecord implements IdentityInterface
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['isAdmin', 'coins_from_viewers', 'auth_key'], 'integer'],
            [['name', 'email', 'password', 'userPhoto', 'description'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Имя',
            'email' => 'Email',
            'password' => 'Password',
            'isAdmin' => 'Is Admin',
            'userPhoto' => 'Фото',
            'description' => 'Описание',
            'cout_task' => 'Заданий выполнено',
            'money' => 'Денегна счету',
            'coins_from_viewers' => 'Монеты от зрителей'
        ];
    }

    public static function findIdentity($id)
    {
        return User::findOne($id);
    }
    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        return $this->auth_key;
    }

    public function validateAuthKey($authKey)
    {
        return $this->getAuthKey() === $authKey;
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return static::findOne(['access_token' => $token]);
    }

    public static function findByEmail($email)
    {
        return User::find()->where(['email'=>$email])->one();
    }

    public function validatePassword($password)
    {
        return $this->password == $password;
    }
    /*public function validateEmail($email)
    {
        return $this->email == $email;
    }
    */

    public function create()
    {
        return $this->save(false);
    }

    


    public function saveImagee($filename)
    {
        $this->userPhoto = $filename;
        return $this->save(false);
    }

    public function getImage()
    {
        return ($this->userPhoto) ? '/uploads/' . $this->userPhoto : '/no-image.png';
    }

    public function deleteImage()
    {
        $imageUploadModel = new ImageUpLoad();
        $imageUploadModel->deleteCurrentImage($this->userPhoto);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }


    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            if ($this->isNewRecord) {
                $this->auth_key = Yii::$app->security->generateRandomString();
            }
            return true;
        }
        return false;
    }

    
}
