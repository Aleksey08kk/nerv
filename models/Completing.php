<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "completing".
 * 
 * @property int $id
 * @property int|null $user_id
 * @property string|null $video_first
 * @property string|null $video_second
 * @property string|null $video_third
 * @property string|null $video_fourth
 * @property string|null $video_fifth
 * @property string|null $video_sixth
 * @property string|null $video_seventh
 * @property string|null $video_eighth
 * @property string|null $video_ninth
 * @property string|null $video_tenth
 * @property string|null $video_number
 */
class Completing extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'completing';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id'], 'integer'],
            [['video_first', 'video_second', 'video_third', 'video_fourth', 'video_fifth', 'video_sixth', 'video_seventh', 'video_eighth', 'video_ninth', 'video_tenth'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'video_first' => 'Video First',
            'video_second' => 'Video Second',
            'video_third' => 'Video Third',
            'video_fourth' => 'Video Fourth',
            'video_fifth' => 'Video Fifth',
            'video_sixth' => 'Video Sixth',
            'video_seventh' => 'Video Seventh',
            'video_eighth' => 'Video Eighth',
            'video_ninth' => 'Video Ninth',
            'video_tenth' => 'Video Tenth',
        ];
    }

    
    public function saveImage($filename)
    {
        $this->video_first = $filename;
        return $this->save(false);
    }
    
    public function getImage()
    {
        return ($this->image) ? '/uploads/' . $this->image : '/no-image.png';
    }

    public function deleteImage()
    {
        $imageUploadModel = new UploadImage();
        $imageUploadModel->deleteCurrentImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
